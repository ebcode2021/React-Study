{"ast":null,"code":"var _jsxFileName = \"/Users/eunbison/Desktop/study/React-Study/First_Encounter_With_React/src/chapter_12/Calculator.jsx\",\n  _s = $RefreshSig$();\nimport TemperatureInput from './TemperatureInput';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBB3C \\uB053\\uB294\\uC911..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uBB3C \\uC548\\uB053\\uB294\\uC911..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = BoilingVerdict;\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\nfunction Calculator(props) {\n  _s();\n  const [temperature, setTemperature] = useState('');\n  const [scale, setScale] = useState('c');\n  const handleCelsiusChange = temperature => {\n    setTemperature(temperature);\n    setScale('c');\n  };\n  const handleFahrenheitChange = temperature => {\n    setTemperature(temperature);\n    setScale('f');\n  };\n  const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n  const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: handleCelsiusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: handleFahrenheitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      celsius: parseFloat(celsius)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n_s(Calculator, \"WTiyy6IxvIV6eHx+SEfr3CG/my0=\");\n_c2 = Calculator;\nexport default Calculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoilingVerdict\");\n$RefreshReg$(_c2, \"Calculator\");","map":{"version":3,"names":["TemperatureInput","React","useState","jsxDEV","_jsxDEV","BoilingVerdict","props","celsius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","toCelsius","fahrenheit","toFahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","Calculator","_s","setTemperature","scale","setScale","handleCelsiusChange","handleFahrenheitChange","onTemperatureChange","_c2","$RefreshReg$"],"sources":["/Users/eunbison/Desktop/study/React-Study/First_Encounter_With_React/src/chapter_12/Calculator.jsx"],"sourcesContent":["import TemperatureInput from './TemperatureInput';\nimport React, { useState } from 'react';\n\nfunction BoilingVerdict(props) {\n\tif (props.celsius >= 100) {\n\t\treturn <p>물 끓는중..</p>;\n\t}\n\treturn <p>물 안끓는중..</p>;\n}\n\nfunction toCelsius(fahrenheit) {\n\treturn ((fahrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius) {\n\treturn (celsius * 9) / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n\tconst input = parseFloat(temperature);\n\tif (Number.isNaN(input)) {\n\t\treturn '';\n\t}\n\n\tconst output = convert(input);\n\tconst rounded = Math.round(output * 1000) / 1000;\n\n\treturn rounded.toString();\n}\n\nfunction Calculator(props) {\n\tconst [temperature, setTemperature] = useState('');\n\tconst [scale, setScale] = useState('c');\n\n\tconst handleCelsiusChange = (temperature) => {\n\t\tsetTemperature(temperature);\n\t\tsetScale('c');\n\t};\n\n\tconst handleFahrenheitChange = (temperature) => {\n\t\tsetTemperature(temperature);\n\t\tsetScale('f');\n\t};\n\n\tconst celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n\tconst fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n\treturn (\n\t\t<div>\n\t\t\t<TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange={handleCelsiusChange} />\n\t\t\t<TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange={handleFahrenheitChange} />\n\t\t\t<BoilingVerdict celsius={parseFloat(celsius)} />\n\t\t</div>\n\t);\n}\n\nexport default Calculator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}